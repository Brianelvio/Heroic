enum banType
{
    USER
    IP
    MACHINE
}

enum banStatus
{
    BANNED
    APPEALING
    REJECTED
}

enum roomType
{
	PUBLIC
	LOCKED
	PASSWORD
	HIDDEN
}

enum Gender
{
	M
	F
}

type Ban @pgTable(name: "bans")
{
    id: ID! @id
    reason: String
    status: banStatus
    type: banType
    user: Int
    ip: String
    machine: String
    by: Int
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updatedAt
}

type Badge @pgTable(name: "badges")
{
    id: ID! @id
    code: String! @unique
    description: String
}

type Bot @pgTable(name: "bots")
{
    id: ID! @id
    name: String
    motto: String
    inventory: Boolean
    owner: Int
    gender: Boolean
    figure: String
    type: String
    state: [String] @scalarList(strategy: RELATION)
    action: [String] @scalarList(strategy: RELATION)
    position: [Int] @scalarList(strategy: RELATION)
    messages: String
    chatBubble: Int
    chatAuto: Int
    chatRandom: Boolean
    chatDelay: Int @default(value: 4)
}

# @TODO: Create relation between CatalogPages (link -> id)
type CatalogFeatured @pgTable(name: "catalog_featured")
{
    id: ID! @id
    caption: String
    image: String
    link: String
    slot: Int
    updated: DateTime @updatedAt
}

type CatalogPage @pgTable(name: "catalog_pages")
{
	id: ID! @id
	parent: Int
	type: String
	order: Int
	name: String!
	caption: String
	description: String
	icon: String
	visible: Boolean @default(value: true)
	enabled: Boolean @default(value: true)
	rank: Int @default(value: 1)
	club: Boolean @default(value: false)
	vip: Boolean @default(value: false)
	body: String
}

type CatalogItem @pgTable(name: "catalog_items")
{
    id: ID! @id
    page: Int
    item: Int
    name: String
    # price: Currencies
    amount: Int
    limited: Boolean
    maximum: Int @default(value: -1)
    stack: Boolean @default(value: true)
    active: Boolean
}

type Chatlog @pgTable(name: "chatlog")
{
    id: ID! @id
    habbo: Habbo!
    room: Room!
    message: String
    createdAt: DateTime @createdAt
}

type ChatlogConsole @pgTable(name: "chatlogs_console")
{
    id: ID! @id
    from: Habbo! @relation(name: "ChatlogsConsoleFromUser")
    to: Habbo! @relation(name: "ChatlogsConsoleToUser")
    message: String
    createdAt: DateTime @createdAt
}

type ChatlogConsoleInvitations @pgTable(name: "chatlogs_console_invitations")
{
    id: ID! @id
    from: Habbo! @relation(name: "ChatlogsConsoleInvitationsFromUser")
    to: Habbo! @relation(name: "ChatlogsConsoleInvitationsToUser")
    message: String
    room: Room!
    createdAt: DateTime @createdAt
}

type Room @pgTable(name: "rooms")
{
	id: ID! @id
	name: String!
	description: String
	type: roomType @default(value: PUBLIC)
	category: Int
	owner: Int
	map: Json
	floorThickness: Int
	wallThickness: Int
	wallHeight: Int
	hideWalls: Boolean @default(value: false)
	hideWired: Boolean @default(value: false)
    currentUsers: Int @default(value: 0)
	maxUsers: Int @default(value: 10)
	allowPets: Boolean @default(value: false)
	allowPetsEating: Boolean @default(value: false)
	rights: [Int] @scalarList(strategy: RELATION)
	items: [Item] @relation(name: "Items", onDelete: CASCADE)
}

type Item @pgTable(name: "items")
{
    id: ID! @id
    owner: Int
    room: Room! @relation(name: "RoomItems", onDelete: SET_NULL)
    furniture: Int
	type: String
    x: Int
    y: Int
    z: Int
    rotation: Int
    wallPosition: [Float] @scalarList(strategy: RELATION)
	inventory: Boolean
}

#3 Types

# Furniture (Class) -> Catalog Item (Instance where its displayed on the catalog) -> Item (Instance with a User as the owner)

# type Currencies {
#     id: ID! @id
#     name: String!
#     value: Int
# }

type NavigatorTab @pgTable(name: "navigator_tabs")
{
    id: ID! @id
    name: String
    order: Int @unique
    categories: [NavigatorCategory!]!
}

type NavigatorCategory @pgTable(name: "navigator_categories")
{
    id: ID! @id
    name: String
    order: Int @unqiue
    parent: NavigatorTab
}

type News @pgTable(name: "news")
{
	id: ID! @id
	title: String
	summary: String
	body: String
	image: String
	author: User
	createdAt: DateTime @createdAt
    updatedAt: DateTime @updatedAt
}

type Habbo @pgTable(name: "habbos")
{
    id: ID! @id
    user: User!
    username: String! @unique
    motto: String
	gender: Gender
    figure: String
    rank: Int
    vip: Int
    online: Boolean
    verified: Int
    home: Int
    volume: Int
	appearOffline: Boolean @default(value: false)
    allowTrade: Boolean @default(value: true)
	allowGifts: Boolean @default(value: true)
	allowMimic: Boolean @default(value: true)
	allowFollow: Boolean @default(value: true)
	allowWhisper: Boolean @default(value: true)
	allowFriendRequests: Boolean @default(value: true)
	allowBotSpeech: Boolean @default(value: true)
	allowPetSpeech: Boolean @default(value: true)
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updatedAt
}

type User @pgTable(name: "users")
{
    id: ID! @id
    email: String
    password: String
    pin: Int
    habbos: [Habbo!]!
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updatedAt
}
